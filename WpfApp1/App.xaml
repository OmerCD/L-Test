<Application x:Class="WpfApp1.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp1"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="DonusAnimasyonu" TargetType="Image">
            <Setter Property="Image.RenderTransform">
                <Setter.Value>
                    <RotateTransform CenterX="65" CenterY="65" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard FillBehavior="Stop">
                                <DoubleAnimation
                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                        From="0"
                                        To="360"
                                        Duration="0:0:1"
                                        />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--BUTONLAR-->
        <Style x:Key="MiniButonlar" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#F3AC122E"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                            BorderThickness="0"
                            BorderBrush="#FF8F8F8F"
                            Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#F3B25566"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MiniButonlarCikis" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#F3AC122E"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                            BorderThickness="0,0,0,0"
                            BorderBrush="#FF8F8F8F"
                            Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="Red"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuButonlar" TargetType="Button">
            <Setter Property="Foreground" Value="#FFDEDEDE"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                            BorderBrush="{x:Null}"
                            Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFAA4A5B"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="LightGreen"/>
                                <Setter TargetName="border" Property="Background" Value="#FFAA4A5B"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestButonlar" TargetType="Button">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F38B0B22"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="UstMenuLabel" TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Titillium Web SemiBold"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Foreground" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Label" TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Titillium Web"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <Style x:Key="TextBlock" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Titillium Web"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <Style x:Key="TextBox" TargetType="TextBox">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Titillium Web Light"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border 
                              Name="Border"
                              CornerRadius="2" 
                              Padding="2"
                              Background="#FFEAEAEA"
                              BorderThickness="1" >
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Border" Property="CornerRadius" Value="2"/>
                                <Setter TargetName="Border" Property="Padding" Value="2"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="3"/>
                                <Setter TargetName="Border" Property="Background" Value="White"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF86D3FF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DikeySeparator" 
       TargetType="{x:Type Separator}"
       BasedOn="{StaticResource {x:Type Separator}}">
            <Setter Property="Margin" Value="6,0,6,0"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <TransformCollection>
                                <RotateTransform Angle="90"/>
                            </TransformCollection>
                        </TransformGroup.Children>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DockPanelStyle" TargetType="DockPanel">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter  Property="DockPanel.Dock" Value="Top"/>
            <Setter Property="Margin" Value="3,15,3,0"/>
        </Style>
        
    </Application.Resources>
</Application>
